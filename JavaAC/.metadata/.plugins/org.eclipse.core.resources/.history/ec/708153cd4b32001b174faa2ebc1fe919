


import java.awt.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;

import javax.swing.*;

public class Gui extends JPanel implements ClipboardOwner
{
    /**
	 * 
	 */
	
	public static int c = 0;
	private static final long serialVersionUID = 1L;
	private JButton getspam;
	private JButton jcomp5;
	private JButton open2000;
	private JButton openanti;
	public JButton maincolor;
	public JButton AutoPilot;
	public JButton wavessetting;
	public JButton exit;
	public JButton delay;
	private JTextField username;
	private JLabel status;
	
    public static String StatusText = "Status:";
	private int Count = 1;
	
	 public static int Waves = 1;
  
    
    public Gui() {
       
        this.setBackground(Color.BLACK);
        this.getspam = new JButton("Get Spam");
        this.jcomp5 = new JButton("Chatroom2000");
        this.open2000 = new JButton("Open Chatroom");
        this.openanti = new JButton("Open Anti");
        this.maincolor = new JButton("Snapfame v" + Main.version);
        this.AutoPilot = new JButton("AutoPilot");
        this.wavessetting = new JButton("Waves: 1");
        this.delay = new JButton("Delay: 1x");
        this.exit = new JButton("Exit");
        this.username = new JTextField();
        this.setStatus(new JLabel("Status: Wellcome!"));
       
        this.setPreferredSize(new Dimension(330, 250));
        this.setLayout(null);
        this.setBackground(Color.BLACK);
        this.add(this.getspam);
       // this.add(this.jcomp5);
        this.add(this.open2000);
        this.add(this.openanti);
        this.add(this.maincolor);
        this.add(this.AutoPilot);
        this.add(this.wavessetting);
        this.add(this.exit);
        this.add(this.delay);
        this.add(this.username);
        this.add(this.getStatus());
           
        this.getspam.setForeground(Color.BLACK);     
        this.jcomp5.setForeground(Color.BLACK);       
        this.open2000.setForeground(Color.BLACK);        
        this.openanti.setForeground(Color.BLACK);        
        this.maincolor.setForeground(Color.BLACK);
        this.AutoPilot.setForeground(Color.BLACK);
        this.wavessetting.setForeground(Color.BLACK);
        this.delay.setForeground(Color.BLACK);
        this.getStatus().setForeground(Color.YELLOW);
        maincolor.setBackground(new Color(255, 252, 0));	
		getspam.setBackground(new Color(255, 252, 0));
		jcomp5.setBackground(new Color(255, 252, 0));	
		open2000.setBackground(new Color(255, 252, 0));
		openanti.setBackground(new Color(255, 252, 0));
		AutoPilot.setBackground(new Color(255, 252, 0));
		delay.setBackground(new Color(255, 252, 0));
		wavessetting.setBackground(new Color(255, 252, 0));
		exit.setBackground(new Color(255, 252, 0));
        
        
        
        final int h = 30;
        this.getspam.setBounds(10, h + 30, 150, 25);
        this.jcomp5.setBounds(10, h + 60, 150, 25);
        this.open2000.setBounds(10, h + 90, 150, 25);
        this.openanti.setBounds(10, h + 120, 150, 25);
        this.maincolor.setBounds(10, h, 310, 25);
        this.AutoPilot.setBounds(10, h + 60, 150, 25);
        this.wavessetting.setBounds(170, h + 90, 150, 25);
        this.delay.setBounds(170, h + 120, 150, 25);
        this.exit.setBounds(170, h + 120, 150, 25);
        this.getStatus().setBounds(10, h + 150, 300, 25);
        this.username.setText("");       
        this.username.setBounds(170, h + 30, 150, 25);
  
       
        
        this.exit.addActionListener(new ActionListener() {

    			@Override
    			public void actionPerformed(ActionEvent arg0) {
    				System.exit(1);
    			}
            	
            });
            
        
      
        this.wavessetting.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				
				if(Waves <= 4) {
					Waves++;
					Gui.this.wavessetting.setText("Waves: " + Waves);
					Gui.this.status.setText("Status: Changed Waves to " + Waves);
					
				}
				else if(Waves != 1){
					Waves = 1;
					Gui.this.wavessetting.setText("Waves: " + Waves);
					int k = Waves;
					Gui.this.status.setText("Status: Changed Waves to " + Waves);
				}
				
				System.out.print(Waves);
			}
        	
        });
        
        
        this.AutoPilot.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				try {
			
					
					
					Gui.this.status.setText("Status: Auto Pilot Finished!");
					
				} catch (InterruptedException e) {				
					e.printStackTrace();
				} catch (AWTException e) {	
					e.printStackTrace();
				}
				
			}
        	
        });
        

        this.maincolor.addActionListener(new ActionListener() {
        	
			@Override
			public void actionPerformed(ActionEvent e) {
			PlaySound.start();	
				
				
			if(c == 0) {
			getspam.setBackground(new Color(255, 88, 77));	
			jcomp5.setBackground(new Color(255, 88, 77));	
			open2000.setBackground(new Color(255, 88, 77));	
			openanti.setBackground(new Color(255, 88, 77));	
			maincolor.setBackground(new Color(255, 88, 77));	
			AutoPilot.setBackground(new Color(255, 88, 77));
			wavessetting.setBackground(new Color(255, 88, 77));	
			exit.setBackground(new Color(255, 88, 77));	
			getspam.setForeground(Color.white);     
	        jcomp5.setForeground(Color.white);       
	        open2000.setForeground(Color.white);        
	        openanti.setForeground(Color.white);        
	        maincolor.setForeground(Color.white);
	        AutoPilot.setForeground(Color.white);
	        wavessetting.setForeground(Color.white);
	        exit.setForeground(Color.white);
	        status.setForeground(Color.RED);
			
			System.out.print("yeet");
			c = 1;	
			}
			
			else if(c == 1) {
			maincolor.setBackground(new Color(55, 164, 222));
			getspam.setBackground(new Color(55, 164, 222));	
			jcomp5.setBackground(new Color(55, 164, 222));	
			open2000.setBackground(new Color(55, 164, 222));	
			openanti.setBackground(new Color(55, 164, 222));	
			AutoPilot.setBackground(new Color(55, 164, 222));	
			wavessetting.setBackground(new Color(55, 164, 222));	
			exit.setBackground(new Color(55, 164, 222));	
			getspam.setForeground(Color.white);     
	        jcomp5.setForeground(Color.white);       
	        open2000.setForeground(Color.white);        
	        openanti.setForeground(Color.white);        
	        maincolor.setForeground(Color.white);
	        AutoPilot.setForeground(Color.white);
	        wavessetting.setForeground(Color.white);        
	        exit.setForeground(Color.white);
	        status.setForeground(Color.BLUE);
			
			c = 2;
			}

			else if(c == 2) {
	
			
			maincolor.setBackground(new Color(255, 252, 0));
			maincolor.setBackground(new Color(255, 252, 0));
			getspam.setBackground(new Color(255, 252, 0));
			jcomp5.setBackground(new Color(255, 252, 0));	
			open2000.setBackground(new Color(255, 252, 0));
			AutoPilot.setBackground(new Color(255, 252, 0));
			openanti.setBackground(new Color(255, 252, 0));
			wavessetting.setBackground(new Color(255, 252, 0));
			exit.setBackground(new Color(255, 252, 0));
			getspam.setForeground(Color.BLACK);     
	        jcomp5.setForeground(Color.BLACK);       
	        open2000.setForeground(Color.BLACK);        
	        openanti.setForeground(Color.BLACK);        
	        maincolor.setForeground(Color.BLACK);
	        AutoPilot.setForeground(Color.BLACK);
	        wavessetting.setForeground(Color.BLACK);        
	        exit.setForeground(Color.BLACK);
	        status.setForeground(Color.YELLOW);
			
			c = 0;
			}
			
			Gui.this.status.setText("Status: Changed Color");
			
			}
		});
        
        
        
        this.getspam.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				if(Count == 1) {
					setClipboardContents("Heyy naa ;) suche versaute typen addet mich auf snep heiße da " + Gui.this.username.getText() + "   :D");
					Count = Count + 1;
					}
				else if(Count == 2) {
					setClipboardContents("Addet mich auf snep heiße da " + Gui.this.username.getText() + " bin versaut o.o");
					Count = Count + 1;
					}
				else if(Count == 3) {
					setClipboardContents("heyyy suche Süße typen addet mich auf snep heiße da " + Gui.this.username.getText() + " ;)");
					Count = Count + 1;
					}
				else if(Count == 4) {
					setClipboardContents("Hey addet mich schnell auf snep bevor ich hier gesperrt werde weil ich so versaut bin heiße da " + Gui.this.username.getText()+ " :D");
					Count = Count + 1;
					}
				else if(Count == 5) {
					setClipboardContents("Suche süße boys :P addet mich auf snep heiße da" + Gui.this.username.getText() + "  x)");
					Count = Count + 1; 
					}
				else if(Count == 6) {
					setClipboardContents("Zeige was 0.0 aber nur auf snep! addet mich da heiße dort " + Gui.this.username.getText() + " :P");
					Count = Count + 1;
					}
				else if(Count == 7) {
					setClipboardContents("addet mich auf snep heiße da " + Gui.this.username.getText() + "   ;P :D");
					Count = Count + 1;
					}
				else if(Count == 8) {
					setClipboardContents("antworte nur auf snep addet mich da heiße da " + Gui.this.username.getText() + " sonst verpasst ihr da was;P");
					Count = 1;
					}
				
				Gui.this.status.setText("Status: Copied Text to Clipboard");
				
				
							}
		});
        
        
        
        
       this.jcomp5.addActionListener(new ActionListener() {
		
		@Override
		public void actionPerformed(ActionEvent e) {
			try {
				AutoType.Spam(1);
			} catch (AWTException e1) {
				
			} catch (InterruptedException e1) {
				
			}
			
		}
	});
       
       
       this.open2000.addActionListener(new ActionListener() {
   		
   		@Override
   		public void actionPerformed(ActionEvent e) {
   			Desktop yes = Desktop.getDesktop();
   			try {
				yes.browse(new URI("https://www.chatroom2000.de/"));
			} catch (IOException e1) {
				
				e1.printStackTrace();
			} catch (URISyntaxException e1) {
				
				e1.printStackTrace();
			}
   		}
   	});
       
       this.openanti.addActionListener(new ActionListener() {
      		
      		@Override
      		public void actionPerformed(ActionEvent e) {
      			Desktop yes = Desktop.getDesktop();
      			try {
   				yes.browse(new URI("https://www.antiland.com/"));
   				yes.browse(new URI("https://temp-mail.org/de/"));
   				
   			} catch (IOException e1) {
   				
   				e1.printStackTrace();
   			} catch (URISyntaxException e1) {
   				
   				e1.printStackTrace();
   			}
      		}
      	});
       
    }
    
   
    
    public void setClipboardContents(String string){
        StringSelection stringSelection = new StringSelection(string);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, this);
      }

	@Override
	public void lostOwnership(Clipboard clipboard, Transferable contents) {
		
		
	}

	public JLabel getStatus() {
		return status;
	}

	public void setStatus(JLabel status) {
		this.status = status;
	}
	
	
	 
        
}
